project_name: datalift

env:
  - DOCKER_CLI_EXPERIMENTAL=enabled
  - CGO_ENABLED=0

before:
  hooks:
    - make ui cli-completions cli-manpages

snapshot:
  name_template: "{{ incpatch .Version }}-dev"

report_sizes: true

builds:
  - id: datalift-cli
    binary: datalift
    dir: cli
    mod_timestamp: &build-timestamp '{{ .CommitTimestamp }}'
    flags: &build-flags |
      -v
      -trimpath
    ldflags: &build-ldflags |
      -w
      -s
      -extldflags="-static"
      -X main.version={{ .Version }}
      -X main.commit={{ .FullCommit }}
      -X main.date={{ .CommitDate }}
      -X main.builtBy=datalift
    goos:
      - linux
      - darwin
      - windows
    goarch:
      - amd64
      - arm64
      - s390x
      - ppc64le
    ignore:
      - goos: darwin
        goarch: s390x
      - goos: darwin
        goarch: ppc64le
      - goos: windows
        goarch: s390x
      - goos: windows
        goarch: ppc64le
      - goos: windows
        goarch: arm64

  - id: datalift-server
    binary: datalift-server
    dir: server
    hooks:
      pre:
        - cmd: go -C server run cmd/assets/generate.go ../ui/build
          output: true
    mod_timestamp: *build-timestamp
    flags: *build-flags
    ldflags: *build-ldflags
    goos:
      - linux
      - darwin
      - windows
    goarch:
      - amd64
      - arm64
      - s390x
      - ppc64le
    ignore:
      - goos: darwin
        goarch: s390x
      - goos: darwin
        goarch: ppc64le
      - goos: windows
        goarch: s390x
      - goos: windows
        goarch: ppc64le
      - goos: windows
        goarch: arm64

checksum:
  name_template: 'checksums.txt'

changelog:
  sort: asc
  filters:
    exclude:
      - "^test:"
      - "^chore"
      - "merge conflict"
      - Merge pull request
      - Merge remote-tracking branch
      - Merge branch
      - go mod tidy
  groups:
    - title: Dependency updates
      regexp: '^.*?(feat|fix)\(deps\)!?:.+$'
      order: 300
    - title: "New Features"
      regexp: '^.*?feat(\([[:word:]]+\))??!?:.+$'
      order: 100
    - title: "Security updates"
      regexp: '^.*?sec(\([[:word:]]+\))??!?:.+$'
      order: 150
    - title: "Bug fixes"
      regexp: '^.*?fix(\([[:word:]]+\))??!?:.+$'
      order: 200
    - title: "Documentation updates"
      regexp: ^.*?doc(\([[:word:]]+\))??!?:.+$
      order: 400
    - title: "Build process updates"
      regexp: ^.*?build(\([[:word:]]+\))??!?:.+$
      order: 400
    - title: Other work
      order: 9999

sboms:
  - artifacts: archive

archives:
  - name_template: >-
      {{ .ProjectName }}-{{ .Version }}_{{ .Os }}_
      {{- if eq .Arch "386" }}i386
      {{- else if and (eq .Os "darwin" ) (eq .Arch "all") }}ubin
      {{- else }}{{ .Arch }}{{ end }}
    format_overrides:
      - goos: windows
        format: zip
    builds_info:
      group: root
      owner: root
    files:
      - README.md
      - LICENSE
      - src: cli/completions/*
        dst: completions
      - src: cli/manpages/*
        dst: manpages
      - src: server/config.yaml
        dst: config.yaml

brews:
  - name: datalift
    folder: Formula
    goarm: "7"
    homepage: &website https://datalift.io/
    description: Datalift CLI utility
    license: Apache-2.0
    commit_author:
      name: release-bot
      email: release-bot@datalift.io
    test: |
      system "#{bin}/datalift --version"
    install: |-
      bin.install "datalift"
      bin.install_symlink "datalift" => "dl"
      bash_completion.install "completions/datalift.bash" => "datalift"
      zsh_completion.install "completions/datalift.zsh" => "_datalift"
      fish_completion.install "completions/datalift.fish"
      man1.install "manpages/datalift.1.gz"
    repository:
      owner: DataliftHQ
      name: homebrew-tap
    caveats: "❤ Thanks for installing the Datalift!"

nfpms:
  - file_name_template: >-
      {{ .ProjectName }}-{{ .Version }}_{{ .Os }}_
      {{- if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
    license: Apache 2.0
    maintainer: Datalift <support@datalift.io>
    homepage: *website
    description: &description Platform Orchestrator designed to empower developers in accelerating the development, deployment, and seamless management of their applications.
    vendor: Datalift
    bindir: /usr/bin
    section: utils
    contents:
      - src: ./cli/completions/datalift.bash
        dst: /usr/share/bash-completion/completions/datalift
        file_info:
          mode: 0644
      - src: ./cli/completions/datalift.fish
        dst: /usr/share/fish/vendor_completions.d/datalift.fish
        file_info:
          mode: 0644
      - src: ./cli/completions/datalift.zsh
        dst: /usr/share/zsh/vendor-completions/_datalift
        file_info:
          mode: 0644
      - src: ./cli/manpages/datalift.1.gz
        dst: /usr/share/man/man1/datalift.1.gz
        file_info:
          mode: 0644
      - src: ./LICENSE
        dst: /usr/share/doc/datalift/copyright
        file_info:
          mode: 0644
    formats:
      - apk
      - deb
      - rpm
      - archlinux
    deb:
      lintian_overrides:
        - statically-linked-binary
        - changelog-file-missing-in-native-package

scoops:
  - name: datalift-cli
    repository:
      owner: DataliftHQ
      name: scoop-bucket
    folder: bucket
    homepage: *website
    description: *description
    license: Apache-2.0
    commit_author:
      name: release-bot
      email: release-bot@datalift.io

dockers:
  # Datalift CLI
  - image_templates:
      - "datalifthq/datalift-cli:v{{ .Version }}-amd64"
      - "ghcr.io/datalifthq/datalift-cli:v{{ .Version }}-amd64"
    dockerfile: cli/Dockerfile
    use: buildx
    build_flag_templates:
      - "--pull"
      - "--label=io.artifacthub.package.readme-url=https://raw.githubusercontent.com/DataliftHQ/datalift/master/README.md"
      - '--label=io.artifacthub.package.maintainers=[{"name":"Datalift","email":"support@datalift.io"}]'
      - "--label=io.artifacthub.package.license=Apache-2.0"
      - "--label=org.opencontainers.image.description=Platform Orchestrator designed to empower developers in accelerating the development, deployment, and seamless management of their applications."
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.name=datalift-cli"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version={{.Version}}"
      - "--label=org.opencontainers.image.source={{.GitURL}}"
      - "--platform=linux/amd64"
    extra_files:
      - cli/scripts/entrypoint.sh
  - image_templates:
      - "datalifthq/datalift-cli:v{{ .Version }}-arm64"
      - "ghcr.io/datalifthq/datalift-cli:v{{ .Version }}-arm64"
    dockerfile: cli/Dockerfile
    use: buildx
    build_flag_templates:
      - "--pull"
      - "--label=io.artifacthub.package.readme-url=https://raw.githubusercontent.com/DataliftHQ/datalift/master/README.md"
      - '--label=io.artifacthub.package.maintainers=[{"name":"Datalift","email":"support@datalift.io"}]'
      - "--label=io.artifacthub.package.license=Apache-2.0"
      - "--label=org.opencontainers.image.description=Platform Orchestrator designed to empower developers in accelerating the development, deployment, and seamless management of their applications."
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.name=datalift-cli"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version={{.Version}}"
      - "--label=org.opencontainers.image.source={{.GitURL}}"
      - "--platform=linux/arm64"
    extra_files:
      - cli/scripts/entrypoint.sh

  # Datalift Server
  - image_templates:
      - "datalifthq/datalift-server:v{{ .Version }}-amd64"
      - "ghcr.io/datalifthq/datalift-server:v{{ .Version }}-amd64"
    dockerfile: server/Dockerfile
    use: buildx
    build_flag_templates:
      - "--pull"
      - "--label=io.artifacthub.package.readme-url=https://raw.githubusercontent.com/DataliftHQ/datalift/master/README.md"
      - '--label=io.artifacthub.package.maintainers=[{"name":"Datalift","email":"support@datalift.io"}]'
      - "--label=io.artifacthub.package.license=Apache-2.0"
      - "--label=org.opencontainers.image.description=Platform Orchestrator designed to empower developers in accelerating the development, deployment, and seamless management of their applications."
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.name=datalift-server"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version={{.Version}}"
      - "--label=org.opencontainers.image.source={{.GitURL}}"
      - "--platform=linux/amd64"
    extra_files:
      - server/config.yaml
  - image_templates:
      - "datalifthq/datalift-server:v{{ .Version }}-arm64"
      - "ghcr.io/datalifthq/datalift-server:v{{ .Version }}-arm64"
    dockerfile: server/Dockerfile
    use: buildx
    build_flag_templates:
      - "--pull"
      - "--label=io.artifacthub.package.readme-url=https://raw.githubusercontent.com/DataliftHQ/datalift/master/README.md"
      - '--label=io.artifacthub.package.maintainers=[{"name":"Datalift","email":"support@datalift.io"}]'
      - "--label=io.artifacthub.package.license=Apache-2.0"
      - "--label=org.opencontainers.image.description=Platform Orchestrator designed to empower developers in accelerating the development, deployment, and seamless management of their applications."
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.name=datalift-server"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version={{.Version}}"
      - "--label=org.opencontainers.image.source={{.GitURL}}"
      - "--platform=linux/arm64"
    extra_files:
      - server/config.yaml

docker_manifests:
  # Datalift CLI
  - name_template: "datalifthq/datalift-cli:v{{ .Version }}"
    image_templates:
      - "datalifthq/datalift-cli:v{{ .Version }}-amd64"
      - "datalifthq/datalift-cli:v{{ .Version }}-arm64"
  - name_template: "datalifthq/datalift-cli:latest"
    image_templates:
      - "datalifthq/datalift-cli:v{{ .Version }}-amd64"
      - "datalifthq/datalift-cli:v{{ .Version }}-arm64"
  - name_template: "ghcr.io/datalifthq/datalift-cli:v{{ .Version }}"
    image_templates:
      - "ghcr.io/datalifthq/datalift-cli:v{{ .Version }}-amd64"
      - "ghcr.io/datalifthq/datalift-cli:v{{ .Version }}-arm64"
  - name_template: "ghcr.io/datalifthq/datalift-cli:latest"
    image_templates:
      - "ghcr.io/datalifthq/datalift-cli:v{{ .Version }}-amd64"
      - "ghcr.io/datalifthq/datalift-cli:v{{ .Version }}-arm64"
  # Datalift Server
  - name_template: "datalifthq/datalift-server:v{{ .Version }}"
    image_templates:
      - "datalifthq/datalift-server:v{{ .Version }}-amd64"
      - "datalifthq/datalift-server:v{{ .Version }}-arm64"
  - name_template: "datalifthq/datalift-server:latest"
    image_templates:
      - "datalifthq/datalift-server:v{{ .Version }}-amd64"
      - "datalifthq/datalift-server:v{{ .Version }}-arm64"
  - name_template: "ghcr.io/datalifthq/datalift-server:v{{ .Version }}"
    image_templates:
      - "ghcr.io/datalifthq/datalift-server:v{{ .Version }}-amd64"
      - "ghcr.io/datalifthq/datalift-server:v{{ .Version }}-arm64"
  - name_template: "ghcr.io/datalifthq/datalift-server:latest"
    image_templates:
      - "ghcr.io/datalifthq/datalift-server:v{{ .Version }}-amd64"
      - "ghcr.io/datalifthq/datalift-server:v{{ .Version }}-arm64"

release:
  footer: |
    **Full Changelog**: https://github.com/DataliftHQ/datalift/compare/{{ .PreviousTag }}...{{ .Tag }}

    ## Helping out

    This release is only possible thanks to **all** the support of some **awesome people**!

announce:
  slack:
    enabled: true
    channel: '#announcements'
