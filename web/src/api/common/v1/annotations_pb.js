// @generated by protoc-gen-es v1.8.0
// @generated from file common/v1/annotations.proto (package admiral.common.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { FieldOptions, MessageOptions, MethodOptions, proto3 } from "@bufbuild/protobuf";
import { Action, Identifier, Reference } from "./schema_pb.js";

/**
 * Use a random high number that won't conflict with annotations from other
 * libraries.
 *
 * @generated from extension: admiral.common.v1.Reference reference = 58901;
 */
export const reference = proto3.makeExtension(
  "admiral.common.v1.reference", 
  MessageOptions, 
  () => ({ no: 58901, kind: "message", T: Reference }),
);

/**
 * @generated from extension: admiral.common.v1.Identifier id = 58902;
 */
export const id = proto3.makeExtension(
  "admiral.common.v1.id", 
  MessageOptions, 
  () => ({ no: 58902, kind: "message", T: Identifier }),
);

/**
 * @generated from extension: bool redacted = 58903;
 */
export const redacted = proto3.makeExtension(
  "admiral.common.v1.redacted", 
  MessageOptions, 
  { no: 58903, kind: "scalar", T: 8 /* ScalarType.BOOL */ },
);

/**
 * Fields with the log option set to false will be cleared during auditing.
 * Defaults to true.
 *
 * @generated from extension: bool log = 58901;
 */
export const log = proto3.makeExtension(
  "admiral.common.v1.log", 
  FieldOptions, 
  { no: 58901, kind: "scalar", T: 8 /* ScalarType.BOOL */ },
);

/**
 * Use a random high number that won't conflict with annotations from other
 * libraries.
 *
 * @generated from extension: admiral.common.v1.Action action = 58901;
 */
export const action = proto3.makeExtension(
  "admiral.common.v1.action", 
  MethodOptions, 
  () => ({ no: 58901, kind: "message", T: Action }),
);

/**
 * @generated from extension: bool disable_audit = 58902;
 */
export const disable_audit = proto3.makeExtension(
  "admiral.common.v1.disable_audit", 
  MethodOptions, 
  { no: 58902, kind: "scalar", T: 8 /* ScalarType.BOOL */ },
);

