// @generated by protoc-gen-es v1.8.0
// @generated from file meta/v1/meta.proto (package admiral.meta.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message admiral.meta.v1.GetMetaRequest
 */
export declare class GetMetaRequest extends Message<GetMetaRequest> {
  constructor(data?: PartialMessage<GetMetaRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "admiral.meta.v1.GetMetaRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetMetaRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetMetaRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetMetaRequest;

  static equals(a: GetMetaRequest | PlainMessage<GetMetaRequest> | undefined, b: GetMetaRequest | PlainMessage<GetMetaRequest> | undefined): boolean;
}

/**
 * @generated from message admiral.meta.v1.GetMetaResponse
 */
export declare class GetMetaResponse extends Message<GetMetaResponse> {
  /**
   * @generated from field: string foo = 1;
   */
  foo: string;

  constructor(data?: PartialMessage<GetMetaResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "admiral.meta.v1.GetMetaResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetMetaResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetMetaResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetMetaResponse;

  static equals(a: GetMetaResponse | PlainMessage<GetMetaResponse> | undefined, b: GetMetaResponse | PlainMessage<GetMetaResponse> | undefined): boolean;
}

