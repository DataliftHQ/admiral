// @generated by protoc-gen-es v1.8.0
// @generated from file foo/v1/foo.proto (package admiral.foo.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message admiral.foo.v1.GetFooRequest
 */
export declare class GetFooRequest extends Message<GetFooRequest> {
  constructor(data?: PartialMessage<GetFooRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "admiral.foo.v1.GetFooRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetFooRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetFooRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetFooRequest;

  static equals(a: GetFooRequest | PlainMessage<GetFooRequest> | undefined, b: GetFooRequest | PlainMessage<GetFooRequest> | undefined): boolean;
}

/**
 * @generated from message admiral.foo.v1.GetFooResponse
 */
export declare class GetFooResponse extends Message<GetFooResponse> {
  /**
   * @generated from field: string foo = 1;
   */
  foo: string;

  constructor(data?: PartialMessage<GetFooResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "admiral.foo.v1.GetFooResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetFooResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetFooResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetFooResponse;

  static equals(a: GetFooResponse | PlainMessage<GetFooResponse> | undefined, b: GetFooResponse | PlainMessage<GetFooResponse> | undefined): boolean;
}

